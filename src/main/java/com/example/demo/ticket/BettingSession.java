package com.example.demo.ticket;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*; // Import all JPA annotations
import lombok.Data; // For @Data, @NoArgsConstructor, @Getter, @Setter
import lombok.NoArgsConstructor; // For JPA default constructor

import java.time.Instant;
import java.util.concurrent.ScheduledFuture;

@Entity // Mark this class as a JPA entity, meaning it maps to a database table
@Data // Lombok: Generates getters, setters, equals, hashCode, and toString methods
@NoArgsConstructor // Lombok: Generates a no-argument constructor, required by JPA
public class BettingSession {

    @Id // Marks sessionId as the primary key of the table
    private String sessionId;

    private Instant startTime;
    private long durationMinutes;
    private boolean active; // This field will now be persisted in the database

    @Transient // Tells JPA to NOT persist this field in the database
    @JsonIgnore // Tells Jackson (for JSON serialization) to ignore this field
    private transient ScheduledFuture<?> scheduledFuture; // `transient` keyword also helps indicate non-persistence and non-serialization by default Java rules

    // Custom constructor to easily create new instances
    public BettingSession(String sessionId, long durationMinutes) {
        this.sessionId = sessionId;
        this.startTime = Instant.now();
        this.durationMinutes = durationMinutes;
        this.active = true; // Sessions are active when first created
    }

    // Note: Getters and Setters are automatically generated by @Data (Lombok)
    // If not using Lombok, you would need to manually add them for all fields except scheduledFuture.
    /*
    public String getSessionId() { return sessionId; }
    public void setSessionId(String sessionId) { this.sessionId = sessionId; }
    public Instant getStartTime() { return startTime; }
    public void setStartTime(Instant startTime) { this.startTime = startTime; }
    public long getDurationMinutes() { return durationMinutes; }
    public void setDurationMinutes(long durationMinutes) { this.durationMinutes = durationMinutes; }
    public boolean isActive() { return active; }
    public void setActive(boolean active) { this.active = active; }
    public ScheduledFuture<?> getScheduledFuture() { return scheduledFuture; }
    public void setScheduledFuture(ScheduledFuture<?> scheduledFuture) { this.scheduledFuture = scheduledFuture; }
    */
}